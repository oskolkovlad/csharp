using System;
using System.Collections.Generic;

namespace Algorithms
{
    // Алгоритм

    // Гномья сортировка основана на технике, используемой обычным голландским садовым гномом (нидерл. tuinkabouter). 
    // Это метод, которым садовый гном сортирует линию цветочных горшков. По существу он смотрит на следующий и предыдущий садовые горшки:
    // если они в правильном порядке, он шагает на один горшок вперёд, иначе он меняет их местами и шагает на один горшок назад. Граничные условия:
    // если нет предыдущего горшка, он шагает вперёд; если нет следующего горшка, он закончил.

    // Гномья сортировка это оптимизированная глупая сортировка. В глупой сортировке при нахождении неотсортированной пары соседей происходит
    // обмен и возврат в начало массива. В гномьей сортировке просто делается один шаг назад.

    // Сложность по времени:
    // - Худшая	 O(n * n)
    // - Средняя O(n * n)
    // - Лучшая  O(n)

    // Сложность по памяти
    // - Общая          O(n)
    // - Дополнительная O(1)

    public class GnomeSort<T> : Base<T>
        where T :  IComparable
    {
        public GnomeSort() { }
        public GnomeSort(IEnumerable<T> items)
        : base (items) { }

        protected override void MakeSort()
        {
            var index = 1;

            while (index < Items.Count)
            {
                if (Compare(Items[index - 1], Items[index]) == 1)
                {
                    Swap(index - 1, index);

                    if (index > 1)
                        index--;
                }
                else
                {
                    index++;
                }
            }
        }
    }
}
 